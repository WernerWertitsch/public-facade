package corp.acme.publicfacade.functions.mock;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import corp.acme.common.domain.Category;
import corp.acme.common.domain.Classification;
import corp.acme.common.domain.ClassificationRequest;

import java.util.ArrayList;
import java.util.List;
import java.util.function.Function;
import java.util.stream.Collectors;

public class GetClassificationsForMock implements Function<ClassificationRequest, List<Classification>> {


    @Override
    public List<Classification> apply(ClassificationRequest classificationRequest) {
        return createMockClassifications( classificationRequest );
    }

    private static List<Classification> createMockClassifications(ClassificationRequest classificationRequest) {
        return classificationRequest.getSubstanceNames().stream().map( n -> {
            Classification classification = new Classification();
            classification.setName(n);
            Category category = new Category();
            int index = (int) Math.round(Math.random() * 2);
            category.setName(new String[]{"MOCKSPLOSIVE", "POISONOUS", "DANGEROUS"}[index]);
            category.setId("GENERATED-" + index);
            category.setDescription("This is generated by a Mock!");
            classification.setCategory(category);
            return classification;
        }).collect(Collectors.toList());

    }


}
